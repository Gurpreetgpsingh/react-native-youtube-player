{"version":3,"sources":["ProgressBar.tsx"],"names":["value","visible","seekTo","duration","pauseVideo","playVideo","fullScreen","styles","container","bottom","progress","zIndex","elevation","p","require","StyleSheet","create","alignSelf","width","height","position","backgroundColor","transform","translateY","outerBar","flex","alignItems","flexDirection"],"mappings":"mKAAA,oDAGA,yCAEA,8E,0HAYe,2BACbA,CAAAA,KADa,MACbA,KADa,CAEbC,OAFa,MAEbA,OAFa,CAGbC,MAHa,MAGbA,MAHa,CAIbC,QAJa,MAIbA,QAJa,CAKbC,UALa,MAKbA,UALa,CAMbC,SANa,MAMbA,SANa,CAObC,UAPa,MAObA,UAPa,OASb,8BAAC,iBAAD,EAAM,KAAK,CAAE,CAACC,MAAM,CAACC,SAAR,CAAmB,CAAEC,MAAM,CAAEH,UAAU,CAAG,EAAH,CAAQ,EAA5B,CAAnB,CAAb,gEAEGL,OAAO,EACN,6BAAC,eAAD,EACE,KAAK,CAAE,CAACM,MAAM,CAACG,QAAR,CAAkB,CAAEC,MAAM,CAAE,EAAV,CAAcC,SAAS,CAAE,EAAzB,CAAlB,CADT,CAEE,YAAY,CAAE,CAFhB,CAGE,cAAc,CAAER,UAHlB,CAIE,iBAAiB,CAAE,2BAAAS,CAAC,CAAI,CACtBX,MAAM,CAACW,CAAC,CAAGV,QAAL,CAAN,CACAE,SAAS,GACV,CAPH,CAQE,YAAY,CAAE,CARhB,CASE,qBAAqB,CAAC,KATxB,CAUE,qBAAqB,CAAC,MAVxB,CAWE,KAAK,CAAEL,KAXT,CAYE,UAAU,CAAEc,OAAO,CAAC,mBAAD,CAZrB,gEAHJ,CATa,E,0BA+Cf,GAAMP,CAAAA,MAAM,CAAGQ,wBAAWC,MAAX,CAAkB,CAC/BR,SAAS,CAAE,CACTS,SAAS,CAAE,QADF,CAETC,KAAK,CAAE,MAFE,CAGTC,MAAM,CAAE,CAHC,CAITC,QAAQ,CAAE,UAJD,CAKTX,MAAM,CAAE,CALC,CADoB,CAQ/BC,QAAQ,CAAE,CACRQ,KAAK,CAAE,MADC,CAERC,MAAM,CAAE,CAFA,CAGRC,QAAQ,CAAE,UAHF,CAIRX,MAAM,CAAE,CAJA,CAKRY,eAAe,CAAE,aALT,CAMRC,SAAS,CAAE,CAAC,CAAEC,UAAU,CAAE,CAAd,CAAD,CANH,CARqB,CAgB/BC,QAAQ,CAAE,CACRC,IAAI,CAAE,CADE,CAERN,MAAM,CAAE,CAFA,CAGRO,UAAU,CAAE,UAHJ,CAIRC,aAAa,CAAE,KAJP,CAKRN,eAAe,CAAE,MALT,CAMRH,KAAK,CAAE,MANC,CAhBqB,CAAlB,CAAf","sourcesContent":["import React, {\n  // useRef\n} from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n// import Animated, { Easing } from \"react-native-reanimated\";\nimport Slider from \"@react-native-community/slider\";\n\ntype Props = {\n  value: number;\n  visible: Boolean;\n  fullScreen: Boolean;\n  duration: number;\n  playVideo: () => void;\n  pauseVideo: () => void;\n  seekTo: (t: number) => void;\n};\n\nexport default ({\n  value,\n  visible,\n  seekTo,\n  duration,\n  pauseVideo,\n  playVideo,\n  fullScreen\n}: Props) => (\n  <View style={[styles.container, { bottom: fullScreen ? 20 : 10 }]}>\n    {/* <Progress progress={value} /> */}\n    {visible && (\n      <Slider\n        style={[styles.progress, { zIndex: 99, elevation: 99 }]}\n        minimumValue={0}\n        onSlidingStart={pauseVideo}\n        onSlidingComplete={p => {\n          seekTo(p * duration);\n          playVideo();\n        }}\n        maximumValue={1}\n        minimumTrackTintColor=\"red\"\n        maximumTrackTintColor=\"#FFF\"\n        value={value}\n        thumbImage={require(\"./icons/thumb.png\")}\n      />\n    )}\n  </View>\n);\n\n// const Progress = ({ progress }: { progress: number }) => {\n//   const ref = useRef(new Animated.Value(0));\n//   Animated.timing(ref.current, {\n//     toValue: progress,\n//     duration: 250,\n//     easing: Easing.inOut(Easing.ease)\n//   }).start();\n\n//   return (\n//     <View style={styles.outerBar}>\n//       <Animated.View\n//         style={{ flex: ref.current, backgroundColor: \"red\", height: 2 }}\n//       />\n//     </View>\n//   );\n// };\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: \"center\",\n    width: \"100%\",\n    height: 2,\n    position: \"absolute\",\n    bottom: 0 // animated to 20 on fullScreen\n  },\n  progress: {\n    width: \"100%\",\n    height: 8,\n    position: \"absolute\",\n    bottom: 0,\n    backgroundColor: \"transparent\",\n    transform: [{ translateY: 3 }]\n  },\n  outerBar: {\n    flex: 1,\n    height: 2,\n    alignItems: \"flex-end\",\n    flexDirection: \"row\",\n    backgroundColor: \"#FFF\",\n    width: \"100%\"\n  }\n});\n"]}